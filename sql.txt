CREATE DATABASE entero;

CREATE TABLE users(
	userid  SERIAL NOT NULL PRIMARY KEY ,
	email VARCHAR(100) NOT NULL UNIQUE,
	password VARCHAR(500),
	name VARCHAR(100) NOT NULL,
	contact_number VARCHAR(15) NOT NULL,
	address VARCHAR(150) NOT NULL,
	image VARCHAR(500) ,
	email_validated BOOLEAN DEFAULT false,
	userrole VARCHAR(2) NOT NULL
);



CREATE TABLE customer(
	userid INT NOT NULL PRIMARY KEY,
	status VARCHAR(1) NOT NULL,
	FOREIGN KEY(userid) REFERENCES users(userid) 
);

CREATE TABLE service_provider(
	userid INT NOT NULL PRIMARY KEY,
	br_no VARCHAR(25) NOT NULL,
	br_file VARCHAR(500) NOT NULL,
	dor DATE NOT NULL,
	refreshment BOOLEAN DEFAULT false,
	decoration BOOLEAN DEFAULT false,
	hallservices BOOLEAN DEFAULT false,
	photography BOOLEAN DEFAULT false,
	birthday BOOLEAN DEFAULT false,
	reception BOOLEAN DEFAULT false,
	wedding BOOLEAN DEFAULT false,
	engagement BOOLEAN DEFAULT false,
	other BOOLEAN DEFAULT false,
	start_date DATE NOT NULL,
	end_date DATE NOT NULL,
	sub_packageid INT  , 
	status VARCHAR(1) NOT NULL,
	FOREIGN KEY(userid) REFERENCES users(userid),
	FOREIGN KEY(sub_packageid) REFERENCES sub_package(sub_packageid)
);

CREATE TABLE sub_package(
	sub_packageid SERIAL not null primary key,
	name varchar(100) not null,
	description varchar(500) not null,
	price varchar(50) not null
);

CREATE TABLE portfolio(
	portfolioid SERIAL not null PRIMARY KEY,
	description VARCHAR(1000) NOT NULL,
	appointment_enable BOOLEAN NOT NULL DEFAULT false,
	chat_enable BOOLEAN NOT NULL DEFAULT false,
	userid INT  NOT NULL,
	FOREIGN KEY(userid) REFERENCES service_provider(userid)
);


CREATE TABLE package(
	package_id SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	description VARCHAR(500) NOT NULL,
	item_description VARCHAR(1500) NOT NULL,
	price INT NOT NULL,
	portfolioid INT NOT NULL,
	FOREIGN KEY(portfolioid) REFERENCES portfolio(portfolioid)
);

CREATE TABLE appointment(
	appointment_id SERIAL PRIMARY KEY,
	date DATE NOT NULL,
	time TIME NOT NULL,
	description VARCHAR(1000) NOT NULL,
	status INT,
	userid_c INT NOT NULL,
	userid_s INT NOT NULL,
	FOREIGN KEY(userid_c) REFERENCES customer(userid),
	FOREIGN KEY(userid_s) REFERENCES service_provider(userid)
);

CREATE TABLE booking(
	booking_id SERIAL PRIMARY KEY,
	date DATE NOT NULL,
	time TIME NOT NULL,
	type varchar(10) NOT NULL,
	location varchar(200) NOT NULL,
	status varchar(1) NOT NULL,
	userid_c INT NOT NULL,
	userid_s INT NOT NULL,
	package_id INT NOT NULL,
	FOREIGN KEY(userid_c) REFERENCES customer(userid),
	FOREIGN KEY(userid_s) REFERENCES service_provider(userid),
	FOREIGN KEY(package_id) REFERENCES package(package_id)
	
);

CREATE TABLE review(
	review_id SERIAL PRIMARY KEY,
	date DATE NOT NULL,
	time TIME NOT NULL,
	rating INT NOT NULL,
	content varchar(500) NOT NULL,
	userid_c INT NOT NULL,
	userid_s INT NOT NULL,
	FOREIGN KEY(userid_c) REFERENCES customer(userid),
	FOREIGN KEY(userid_s) REFERENCES service_provider(userid)
);

CREATE TABLE payment(
	paymentid SERIAL PRIMARY KEY,
	date date not null,
	time time not null,
	price INT NOT NULL,
	userid INT NOT NULL,
	FOREIGN KEY(userid) REFERENCES service_provider(userid)
	
);

CREATE TABLE message(
	chat_id SERIAL PRIMARY KEY,
	conversation_id int NOT NULL,
	sender_id INT NOT NULL,
	date DATE NOT NULL,
	time TIME NOT NULL,
	message varchar(1500) NOT NULL,
	FOREIGN KEY(sender_id) REFERENCES users(userid),
	FOREIGN KEY(conversation_id) REFERENCES conversation(conversation_id)
);

CREATE TABLE conversation(
	conversation_id SERIAL ,
	sender_id INT NOT NULL,
	receiver_id INT NOT NULL,
	FOREIGN KEY(sender_id) REFERENCES users(userid),
	FOREIGN KEY(receiver_id) REFERENCES users(userid),
	PRIMARY KEY(sender_id, receiver_id)
);

CREATE TABLE contact(
	contact_id SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	email VARCHAR(100) NOT NULL, 
	message VARCHAR(500) NOT NULL,
	received_date DATE NOT NULL,
	received_time TIME NOT NULL,
	reply VARCHAR(500),
	reply_date DATE,
	reply_time TIME 
);

CREATE TABLE email_validate(
	userid INT PRIMARY KEY,
	token VARCHAR (500) NOT NULL
);

